import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { SubmitHandler, useForm } from "react-hook-form";
import useAuthContext from "../../hooks/useAuth";

type Inputs = {
  email: string;
  password: string;
};

export default function Login() {
  // хук проверяет мы нажали на кнопку Login или на кнопку Sign Up
  const [isLoginClick, setIsLoginClick] = useState(false);
  const [isSignUp, setIsSignUp] = useState(false);
  const { signIn, signUp } = useAuthContext();

  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<Inputs>();

  const onSubmit: SubmitHandler<Inputs> = async ({ email, password }) => {
    if (isLoginClick) {
      await signIn(email, password);
    } else {
      signUp(email, password);
    }

    return;
  };

  return (
    <div
      className="relative flex h-screen w-screen flex-col
     bg-black md:items-center md:justify-center md:bg-transparent"
    >
      <Head>
        <title>Login to Netflix</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Image
        src="https://rb.gy/p2hphi"
        layout="fill"
        className="-z-10 !hidden opacity-60 sm:!inline"
        objectFit="cover"
      />

      <img
        src="https://rb.gy/ulxxee"
        className="absolute left-4 top-4 cursor-pointer object-contain md:left-10 md:top-6"
        width={150}
        height={150}
      />

      <form
        className="relative mt-24 space-y-8 rounded bg-black/75 py-10 px-6 
        md:mt-0 md:max-w-md md:px-14"
        onSubmit={handleSubmit(onSubmit)}
      >
        <h1 className="text-4xl font-semibold">Welcome</h1>
        <div className="space-y-4">
          <label>
            <input
              type="email"
              placeholder="email"
              className="input"
              {...register("email", { required: true })}
            />
            {errors.email && <>Please enter a valid email.</>}
          </label>

          <label className="inline-block w-full">
            <input
              type="password"
              placeholder="Password"
              className="input"
              {...register("password", { required: true })}
            />
            {errors.password && (
              <p className="p-1 text-[13px] font-light  text-orange-500">
                Your password must contain between 4 and 60 characters.
              </p>
            )}
          </label>
        </div>
        <button
          onClick={() => setIsLoginClick(true)}
          className="w-full rounded bg-[#e50914] py-3 font-semibold"
        >
          {`${isSignUp ? "Sign Up" : "Sign In"}`}
        </button>
        {!isSignUp ? (
          <div>
            New to Netflix?
            <button
              onClick={() => {
                setIsLoginClick(false);
                setIsSignUp(true);
              }}
              className="text-white hover:underline px-2"
            >
              Sign Up now
            </button>
          </div>
        ) : (
          <button
            onClick={() => setIsSignUp(false)}
            className="text-white hover:underline px-2"
          >
            Sign In
          </button>
        )}
      </form>
    </div>
  );
}
